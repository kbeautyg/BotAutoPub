#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
"""

import os
from config import Config

def test_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞...\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = {
        'TELEGRAM_BOT_TOKEN': Config.TELEGRAM_BOT_TOKEN,
        'SUPABASE_URL': Config.SUPABASE_URL,
        'SUPABASE_KEY': Config.SUPABASE_KEY,
        'ADMIN_TELEGRAM_ID': Config.ADMIN_TELEGRAM_ID,
        'BOT_USERNAME': Config.BOT_USERNAME,
        'DEBUG': Config.DEBUG
    }
    
    missing_vars = []
    
    for var_name, var_value in env_vars.items():
        if var_value:
            if var_name in ['SUPABASE_KEY', 'TELEGRAM_BOT_TOKEN']:
                # –°–∫—Ä—ã–≤–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                masked_value = var_value[:10] + "..." + var_value[-5:] if len(var_value) > 15 else "***"
                print(f"‚úÖ {var_name}: {masked_value}")
            else:
                print(f"‚úÖ {var_name}: {var_value}")
        else:
            print(f"‚ùå {var_name}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")
            missing_vars.append(var_name)
    
    print()
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        print("\nüìù –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:")
        print("TELEGRAM_BOT_TOKEN=your_bot_token_here")
        print("SUPABASE_URL=your_supabase_url_here")
        print("SUPABASE_KEY=your_supabase_anon_key_here")
        print("ADMIN_TELEGRAM_ID=your_telegram_id_here")
        print("BOT_USERNAME=your_bot_username_here")
        print("DEBUG=False")
        return False
    else:
        print("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        try:
            Config.validate()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞!")
            return True
        except ValueError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
            return False

if __name__ == "__main__":
    success = test_config()
    if success:
        print("\nüöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("\n‚ö†Ô∏è –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞.")